<?php

/**
 * @file
 * OpenEuropa module.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\EntityInterface;
use Drupal\group\Entity\GroupContentInterface;
use Drupal\group\Entity\GroupInterface;
use Drupal\group\Entity\GroupRoleInterface;
use Drupal\user\UserInterface;

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function poc_nextcloud_group_workspace_user_insert(UserInterface $user): void {
  _poc_nextcloud_group_workspace_entity_hook($user, 'insert');
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function poc_nextcloud_group_workspace_user_update(UserInterface $user): void {
  _poc_nextcloud_group_workspace_entity_hook($user, 'update');
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 *
 * This needs to use the presave hook, because the fields in the group may need
 * to be udpated.
 */
function poc_nextcloud_group_workspace_group_presave(GroupInterface $group): void {
  _poc_nextcloud_group_workspace_entity_hook($group, 'presave');
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function poc_nextcloud_group_workspace_group_insert(GroupInterface $group): void {
  _poc_nextcloud_group_workspace_entity_hook($group, 'insert');
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function poc_nextcloud_group_workspace_group_update(GroupInterface $group): void {
  _poc_nextcloud_group_workspace_entity_hook($group, 'update');
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function poc_nextcloud_group_workspace_group_delete(GroupInterface $group): void {
  _poc_nextcloud_group_workspace_entity_hook($group, 'delete');
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function poc_nextcloud_group_workspace_group_content_insert(GroupContentInterface $group_content): void {
  _poc_nextcloud_group_workspace_entity_hook($group_content, 'insert');
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function poc_nextcloud_group_workspace_group_content_update(GroupContentInterface $group_content): void {
  _poc_nextcloud_group_workspace_entity_hook($group_content, 'update');
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function poc_nextcloud_group_workspace_group_content_delete(GroupContentInterface $group_content): void {
  _poc_nextcloud_group_workspace_entity_hook($group_content, 'delete');
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function poc_nextcloud_group_workspace_group_role_insert(GroupRoleInterface $group_role): void {
  _poc_nextcloud_group_workspace_entity_hook($group_role, 'insert');
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function poc_nextcloud_group_workspace_group_role_update(GroupRoleInterface $group_role): void {
  _poc_nextcloud_group_workspace_entity_hook($group_role, 'update');
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function poc_nextcloud_group_workspace_group_role_delete(GroupRoleInterface $group_role): void {
  _poc_nextcloud_group_workspace_entity_hook($group_role, 'delete');
}

/**
 * Calls the entity hook dispatcher.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 *   Entity that triggered the event.
 * @param string $op
 *   One of 'insert', 'update', 'delete'.
 */
function _poc_nextcloud_group_workspace_entity_hook(EntityInterface $entity, string $op): void {
  /** @var \Drupal\poc_nextcloud\EntityHook\EntityHookDispatcher $service */
  $service = \Drupal::service('poc_nextcloud_group_workspace.entity_sync');
  $service($entity, $op);
}
